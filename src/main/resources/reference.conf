#########################################################
# Akka akka-kryo-serializer Reference Config File #
#########################################################

# This is the reference config file that contains all the default settings.
# Make your edits/overrides in your application.conf.

akka {
    actor {
        kryo  {
            # Possibles values for type are: graph or nograph
            # graph supports serialization of object graphs with shared nodes
            # and cyclic references, but this comes at the expense of a small overhead
            # nograph does not support object grpahs with shared nodes, but is usually faster
            type = "graph"

            # Possible values for idstrategy are:
            # default, explicit, incremental, automatic
            #
            # default - slowest and produces bigger serialized representation. Contains fully-
            # qualified class names (FQCNs) for each class
            #
            # explicit - fast and produces compact serialized representation. Requires that all
            # classes that will be serialized are pre-registered using the "mappings" and "classes"
            # sections. To guarantee that both sender and receiver use the same numeric ids for the same
            # classes it is advised to provide exactly the same entries in the "mappings" section
            #
            # incremental - fast and produces compact serialized representation. Support optional
            # pre-registering of classes using the "mappings" and "classes" sections. If class is
            # not pre-registered, it will be registered dynamically by picking a next available id
            # To guarantee that both sender and receiver use the same numeric ids for the same
            # classes it is advised to pre-register them using at least the "classes" section
            #
            # automatic - Contains fully-qualified class names (FQCNs) for each class that is not
            # pre-registered in the "mappings" and "classes" section

            idstrategy = "incremental"

            # Define a default size for byte buffers used during serialization
            buffer-size = 4096

            # The serialization byte buffers are doubled as needed until they exceed
            # maxBufferSize and an exception is thrown. Can be -1 for no maximum.
            max-buffer-size = -1

            # Define a custom queue builder, by default (unset) ConcurrentLinkedQueue is used.
            # Look at the main documentation for a concrete example:
            #
            # custom-queue-builder = "a.b.c.KryoQueueBuilder"

            # If set, akka uses manifests to put a class name
            # of the top-level object into each message
            use-manifests = false

            # If set it will use the UnsafeInput and UnsafeOutput
            # Kyro IO instances. Please note that there is no guarantee
            # for backward/forward compatibility of unsafe serialization.
            # It is also not compatible with the safe-serialized values
            use-unsafe = false

            # The transformations that have be done while serialization
            # Supported transformations: compression and encryption
            # accepted values(comma separated if multiple): off | lz4 | deflate | aes
            # Transformations occur in the order they are specified on serialization
            # and reverse order on deserialization
            post-serialization-transformations = "off"

            # Log implicitly registered classes. Useful, if you want to know all classes
            # which are serialized
            implicit-registration-logging = false

            # If enabled, Kryo logs a lot of information about serialization process.
            # Useful for debugging and lowl-level tweaking
            kryo-trace = false

            # If enabled, Kryo uses internally a map detecting shared nodes.
            # This is a preferred mode for big object graphs with a lot of nodes.
            # For small object graphs (e.g. below 10 nodes) set it to false for
            # better performance.
            kryo-reference-map = true

            # If enabled, allows Kryo to resolve subclasses of registered Types.
            #
            # This is primarily useful when idstrategy is set to "explicit". In this
            # case, all classes to be serialized must be explicitly registered. The
            # problem is that a large number of common Scala and Akka types (such as
            # Map and ActorRef) are actually traits that mask a large number of
            # specialized classes that deal with various situations and optimizations.
            # It isn't straightforward to register all of these, so you can instead
            # register a single supertype, with a serializer that can handle *all* of
            # the subclasses, and the subclasses get serialized with that.
            #
            # Use this with care: you should only rely on this when you are confident
            # that the superclass serializer covers all of the special cases properly.
            resolve-subclasses = false

            # Define mappings from a fully qualified class name to a numeric id.
            # Smaller ids lead to smaller sizes of serialized representations.
            #
            # This section is mandatory for idstartegy=explicit
            # This section is optional  for idstartegy=incremental
            # This section is ignored   for idstartegy=default
            #
            # The smallest possible id should start at 20 (or even higher), because
            # ids below it are used by Kryo internally e.g. for built-in Java and
            # Scala types
            mappings {
                # fully.qualified.classname1 = id1
                # fully.qualified.classname2 = id2
            }

            # Define a set of fully qualified class names for
            # classes to be used for serialization.
            # The ids for those classes will be assigned automatically,
            # but respecting the order of declaration in this section
            #
            # This section is optional  for idstartegy=incremental
            # This section is ignored   for idstartegy=default
            # This section is optional  for idstartegy=explicit
            classes = [
                # fully.qualified.classname1
                # fully.qualified.classname2
            ]
        }
    }
}
